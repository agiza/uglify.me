3.2.1 (Media Mark)
2e1b4fc6b400e5bc513e2309a9d4d454e8ce2abc
o:Sass::Tree::RootNode
:@template"Ü// ---------------------------------------------------------------------------
// Imports

@import "compass/utilities/general/clearfix";
@import "compass/css3/box-sizing";

// ---------------------------------------------------------------------------
// Border-Box Sizing

// Apply the border-box sizing model to all elements
// and adjust the grid math appropriately.
@mixin border-box-sizing {
  $border-box-sizing: true;
  * { @include box-sizing(border-box); }
}

// ---------------------------------------------------------------------------
// Container

// Set the width of a container
//
//  $columns  : The number of columns in the Grid Layout.
@mixin set-container-width(
  $columns  : $total-columns
){
  $width: container-outer-width($columns);

  @if $container-style == 'static' {
    width: $width;
  } @else {
    @if $container-style == 'fluid' {
      width: if(unit($width) == '%', $width, auto);
    } @else {
      max-width: $width;
      @if $legacy-support-for-ie6 { _width: $width; }
    }
  }
}

// Set the outer grid-containing element(s).
//
//  $columns  : The number of columns in the container.
@mixin apply-container(
  $columns  : $total-columns
){
  @include pie-clearfix;
  @include set-container-width($columns);
  margin: { left: auto; right: auto; }
  padding: { left: $grid-padding; right: $grid-padding; }
}

// Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
//
// $media-layout-1        : [default:$total-columns] A list of values including -
//                        : One unitless number (representing columns in a layout)
//                        : Two optional lengths (representing min and max-width media-query breakpoints).
// $media-layout-2 ...-10 : [optional] Same as $media-layout-1
@mixin container(
  $media-layout-1   : $total-columns,
  $media-layout-2   : false,
  $media-layout-3   : false,
  $media-layout-4   : false,
  $media-layout-5   : false,
  $media-layout-6   : false,
  $media-layout-7   : false,
  $media-layout-8   : false,
  $media-layout-9   : false,
  $media-layout-10  : false
){
  $media-layouts    : compact($media-layout-2,$media-layout-3,$media-layout-4,$media-layout-5,$media-layout-6,$media-layout-7,$media-layout-8,$media-layout-9,$media-layout-10);

  @if is-default-layout($media-layout-1) {
    @include apply-container();
  } @else {
    @include at-breakpoint($media-layout-1) {
      @include apply-container();
    }
  }

  @each $ml in $media-layouts {
    @if $ml {
      @include at-breakpoint($ml) {
        @include set-container-width;
      }
    }
  }
}

// ---------------------------------------------------------------------------
// Columns

// Create a grid element spanning any number of 'columns' in a grid 'context'.
// $columns : The number of columns to span.
// $context : [optional] The context (columns spanned by parent).
//          : Context is required on any nested elements.
//          : Context MUST NOT be declared on a root element.
// $padding : [optional] Padding applied to the inside of individual grid columns.
//          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
//          : Padding values are applied only on the horizontal axis in from-to order
// $from    : The start direction of your layout (e.g. 'left' for ltr languages)

@mixin span-columns(
  $columns,
  $context       : $total-columns,
  $padding       : false,
  $from          : $from-direction
) {
  $to       : opposite-position($from);
  $pos      : split-columns-value($columns,position);
  $cols     : split-columns-value($columns,columns);
  $pad-from : relative-width(0 * $gutter-width, $context);
  $pad-to   : relative-width(0 * $gutter-width, $context);

  @if $padding != false {
    $pad-from : nth($padding, 1);

    @if length($padding) > 1 {
      $pad-to: nth($padding, 2);
    } @else {
      $pad-to: $pad-from;
    }

    $pad-from : relative-width($pad-from, $context);
    $pad-to   : relative-width($pad-to, $context);

    padding-#{$from}: $pad-from;
    padding-#{$to}: $pad-to;
  }

  width: columns($cols, $context) - if($border-box-sizing, 0, $pad-to + $pad-from);

  @if ($pos == 'omega') {
    @include omega($from);
  } @else {
    float: $from;
    margin-#{$to}: gutter($context);
    @if $legacy-support-for-ie6 {
      display: inline;
    }
  }
}

// Apply to elements spanning the last column, to account for the page edge.
// Only needed as an override. Normally 'omega' can just be called by `columns`.
//
// $from    : The start-direction for your document.
@mixin omega(
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $omega-float;
  margin-#{$to}: 0;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: - $gutter-width;
    @if $legacy-support-for-ie6 { display: inline; }
  }
}

// Shortcut to apply omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $from      : The start-direction for your document.
@mixin nth-omega(
  $n        : last,
  $selector : child,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include omega($from); }
  }
}

// ---------------------------------------------------------------------------
// Resets

// Reset a '+columns' grid element to default block behavior
//
// $from  : The start direction of your layout (e.g. 'left' for ltr languages)
@mixin reset-columns(
  $from: $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: none;
  width: auto;
  margin-#{$to}: auto;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
    @if $legacy-support-for-ie6 { display: block; }
  }
}

// Apply to elements previously set as omega.
// This will return floats and margins back to non-omega settigns.
//
// $context : [optional] The context (columns spanned by parent).
// $from    : The start-direction for your document.
@mixin remove-omega(
  $context  : $total-columns,
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $from;
  margin-#{$to}: gutter($context);

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
  }
}

// Shortcut to apply remove-omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $context   : [optional] The context (columns spanned by parent).
// $from      : The start-direction for your document.
@mixin remove-nth-omega(
  $n        : last,
  $selector : child,
  $context  : $total-columns,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include remove-omega($context,$from); }
  }
}

// ---------------------------------------------------------------------------
// Change Settings

@mixin with-grid-settings(
  $columns: $total-columns,
  $width: $column-width,
  $gutter: $gutter-width,
  $padding: $grid-padding
) {
  // keep the defaults around
  $default-columns: $total-columns;
  $default-width: $column-width;
  $default-gutter: $gutter-width;
  $default-padding: $grid-padding;

  // use the new settings
  $total-columns: $columns;
  $column-width: $width;
  $gutter-width: $gutter;
  $grid-padding: $padding;

  // apply to contents
  @content;

  // re-instate the defaults
  $total-columns: $default-columns;
  $column-width: $default-width;
  $gutter-width: $default-gutter;
  $grid-padding: $default-padding;
}
:@options{ :@has_childrenT:
@linei:@children["o:Sass::Tree::CommentNode
;@:@value["a/* ---------------------------------------------------------------------------
 * Imports */:
@type:silent;	i;
[ o:Sass::Tree::ImportNode
;0;@:@imported_filename"'compass/utilities/general/clearfix;	i	;
[ o;
;0;@;"compass/css3/box-sizing;	i
;
[ o;
;@;["k/* ---------------------------------------------------------------------------
 * Border-Box Sizing */;;;	i;
[ o;
;@;["g/* Apply the border-box sizing model to all elements
 * and adjust the grid math appropriately. */;;;	i;
[ o:Sass::Tree::MixinDefNode:
@name"border-box-sizing:@splat0;@;T:
@args[ ;	i;
[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Bool;@;T;	i;"border-box-sizing;@;	i;
[ :@guarded0o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;	i:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;@%;	i;[o:Sass::Selector::Universal;@%;	i:@namespace0;@;T;	i:
@tabsi ;
[o:Sass::Tree::MixinNode;"box-sizing;0;@;[o:Sass::Script::String	;@;"border-box;:identifier;	i;	i:@keywords{ ;
[ :
@rule["*o;
;@;["c/* ---------------------------------------------------------------------------
 * Container */;;;	i;
[ o;
;@;["d/* Set the width of a container
 *
 *  $columns  : The number of columns in the Grid Layout. */;;;	i;
[ o;;"set-container-width;0;@;T;[[o:Sass::Script::Variable:@underscored_name"columns;"columns;@o;,	;-"total_columns;"total-columns;@;	i;	i;
[o;;o:Sass::Script::Funcall;"container-outer-width;0;@;[o;,	;-"columns;"columns;@;	i;	i;*{ ;"
width;@;	i;
[ ;0u:Sass::Tree::IfNodeÆ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"container_style:
@name"container-style:@options{ :
@linei!;
@
;i!:@operator:eq:@operand2o:Sass::Script::String	;
@
:@value"static:
@type:string;i!u:Sass::Tree::IfNodeB[00[u:Sass::Tree::IfNode"[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"container_style:
@name"container-style:@options{ :
@linei$;
@
;i$:@operator:eq:@operand2o:Sass::Script::String	;
@
:@value"
fluid:
@type:string;i$u:Sass::Tree::IfNodeÑ[00[o:Sass::Tree::PropNode:
@name["max-width:@options{ :@prop_syntax:new:@valueo:Sass::Script::Variable	:@underscored_name"
width;"
width;@
:
@linei';i':
@tabsi :@children[ u:Sass::Tree::IfNodeû[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:
@name"legacy-support-for-ie6:@options{ :
@linei(0[o:Sass::Tree::PropNode;["_width;@	:@prop_syntax:new:@valueo; 	;"
width;"
width;@	;	i(;	i(:
@tabsi :@children[ [o:Sass::Tree::PropNode;	["
width;
@
:@prop_syntax:new;o:Sass::Script::Funcall;	"if:@splat0;
@
:
@args[o; 
;o;;	"	unit;0;
@
;[o;	;"
width;	"
width;
@
;i%;i%:@keywords{ ;
@
;i%;;;o;	;
@
;"%;;;i%o;	;"
width;	"
width;
@
;i%o;	;
@
;"	auto;:identifier;i%;i%;{ ;i%:
@tabsi :@children[ [o:Sass::Tree::PropNode;	["
width;
@
:@prop_syntax:new;o;	;"
width;	"
width;
@
;i";i":
@tabsi :@children[ o;
;@;["o/* Set the outer grid-containing element(s).
 *
 *  $columns  : The number of columns in the container. */;;;	i-;
[ o;;"apply-container;0;@;T;[[o;,;-"columns;"columns;@o;,	;-"total_columns;"total-columns;@;	i1;	i2;
[	o;';"pie-clearfix;0;@;[ ;	i3;*{ ;
[ o;';"set-container-width;0;@;[o;,	;-"columns;"columns;@;	i4;	i4;*{ ;
[ o:Sass::Tree::PropNode;["margin;@:@prop_syntax:new;o;(;@;" ;;);T;	i5;&i ;
[o;0;["	left;@;1;2;o;(;@;"	auto;;);	i5;&i ;
[ o;0;["
right;@;1;2;o;(;@;"	auto;;);	i5;&i ;
[ o;0;["padding;@;1;2;o;(;@;" ;;);T;	i6;&i ;
[o;0;["	left;@;1;2;o;,	;-"grid_padding;"grid-padding;@;	i6;	i6;&i ;
[ o;0;["
right;@;1;2;o;,	;-"grid_padding;"grid-padding;@;	i6;	i6;&i ;
[ o;
;@;["¶/* Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
 *
 * $media-layout-1        : [default:$total-columns] A list of values including -
 *                        : One unitless number (representing columns in a layout)
 *                        : Two optional lengths (representing min and max-width media-query breakpoints).
 * $media-layout-2 ...-10 : [optional] Same as $media-layout-1 */;;;	i9;
[ o;;"container;0;@;T;[[o;,;-"media_layout_1;"media-layout-1;@o;,	;-"total_columns;"total-columns;@;	i@[o;,;-"media_layout_2;"media-layout-2;@o;;@;F;	iA[o;,;-"media_layout_3;"media-layout-3;@o;;@;F;	iB[o;,;-"media_layout_4;"media-layout-4;@o;;@;F;	iC[o;,;-"media_layout_5;"media-layout-5;@o;;@;F;	iD[o;,;-"media_layout_6;"media-layout-6;@o;;@;F;	iE[o;,;-"media_layout_7;"media-layout-7;@o;;@;F;	iF[o;,;-"media_layout_8;"media-layout-8;@o;;@;F;	iG[o;,;-"media_layout_9;"media-layout-9;@o;;@;F;	iH[o;,;-"media_layout_10;"media-layout-10;@o;;@;F;	iI;	iJ;
[o;;o;.;"compact;0;@;[o;,	;-"media_layout_2;"media-layout-2;@;	iKo;,	;-"media_layout_3;"media-layout-3;@;	iKo;,	;-"media_layout_4;"media-layout-4;@;	iKo;,	;-"media_layout_5;"media-layout-5;@;	iKo;,	;-"media_layout_6;"media-layout-6;@;	iKo;,	;-"media_layout_7;"media-layout-7;@;	iKo;,	;-"media_layout_8;"media-layout-8;@;	iKo;,	;-"media_layout_9;"media-layout-9;@;	iKo;,	;-"media_layout_10;"media-layout-10;@;	iK;	iK;*{ ;"media-layouts;@;	iK;
[ ;0u;/5[o:Sass::Script::Funcall:
@name"is-default-layout:@splat0:@options{ :
@args[o:Sass::Script::Variable	:@underscored_name"media_layout_1;"media-layout-1;@:
@lineiM;iM:@keywords{ u:Sass::Tree::IfNode[00[o:Sass::Tree::MixinNode:
@name"at-breakpoint:@splat0:@options{ :@has_childrenT:
@args[o:Sass::Script::Variable	:@underscored_name"media_layout_1;"media-layout-1;@	:
@lineiP;iP:@keywords{ :@children[o; ;"apply-container;0;@	;
[ ;iQ;{ ;[ [o:Sass::Tree::MixinNode;"apply-container;0;@;	[ ;iN;{ :@children[ o:Sass::Tree::EachNode:
@listo;,	;-"media_layouts;"media-layouts;@;	iU;@;T;	iU;
[u;/[o:Sass::Script::Variable	:@underscored_name"ml:
@name"ml:@options{ :
@lineiV0[o:Sass::Tree::MixinNode;"at-breakpoint:@splat0;@	:@has_childrenT:
@args[o; 	;"ml;"ml;@	;	iW;	iW:@keywords{ :@children[o;
;"set-container-width;0;@	;[ ;	iX;{ ;[ :	@var"mlo;
;@;["a/* ---------------------------------------------------------------------------
 * Columns */;;;	i^;
[ o;
;@;["/* Create a grid element spanning any number of 'columns' in a grid 'context'.
 * $columns : The number of columns to span.
 * $context : [optional] The context (columns spanned by parent).
 *          : Context is required on any nested elements.
 *          : Context MUST NOT be declared on a root element.
 * $padding : [optional] Padding applied to the inside of individual grid columns.
 *          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
 *          : Padding values are applied only on the horizontal axis in from-to order
 * $from    : The start direction of your layout (e.g. 'left' for ltr languages) */;;;	ia;
[ o;;"span-columns;0;@;T;[	[o;,;-"columns;"columns;@0[o;,;-"context;"context;@o;,	;-"total_columns;"total-columns;@;	im[o;,;-"padding;"padding;@o;;@;F;	in[o;,;-"	from;"	from;@o;,	;-"from_direction;"from-direction;@;	io;	ip;
[o;;o;.;"opposite-position;0;@;[o;,	;-"	from;"	from;@;	iq;	iq;*{ ;"to;@;	iq;
[ ;0o;;o;.;"split-columns-value;0;@;[o;,	;-"columns;"columns;@;	iro;(	;@;"position;;);	ir;	ir;*{ ;"pos;@;	ir;
[ ;0o;;o;.;"split-columns-value;0;@;[o;,	;-"columns;"columns;@;	iso;(	;@;"columns;;);	is;	is;*{ ;"	cols;@;	is;
[ ;0o;;o;.;"relative-width;0;@;[o:Sass::Script::Operation
:@operand1o:Sass::Script::Number;@:@denominator_units[ ;i :@numerator_units[ ;	it:@original"0;@;	it:@operator:
times:@operand2o;,	;-"gutter_width;"gutter-width;@;	ito;,	;-"context;"context;@;	it;	it;*{ ;"pad-from;@;	it;
[ ;0o;;o;.;"relative-width;0;@;[o;6
;7o;8;@;9@D;i ;:[ ;	iu;;"0;@;	iu;<;=;>o;,	;-"gutter_width;"gutter-width;@;	iuo;,	;-"context;"context;@;	iu;	iu;*{ ;"pad-to;@;	iu;
[ ;0u;/Þ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"padding:
@name"padding:@options{ :
@lineiw;
@
;iw:@operator:neq:@operand2o:Sass::Script::Bool;
@
:@valueF;iw0[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall;	"nth:@splat0;
@
:
@args[o;	;"padding;	"padding;
@
;ixo:Sass::Script::Number;
@
:@denominator_units[ ;i:@numerator_units[ ;ix:@original"1;ix:@keywords{ ;	"pad-from;
@
;ix:@children[ :@guarded0u:Sass::Tree::IfNodeÈ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:@splat0:@options{ :
@args[o:Sass::Script::Variable	:@underscored_name"padding;"padding;
@	:
@lineiz;iz:@keywords{ ;
@	;iz:@operator:gt:@operand2o:Sass::Script::Number;
@	:@denominator_units[ :@valuei:@numerator_units[ ;iz:@original"1u:Sass::Tree::IfNode²[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Variable	:@underscored_name"pad_from:
@name"pad-from:@options{ :
@linei};	"pad-to;
@;i}:@children[ :@guarded0[o:Sass::Tree::VariableNode:
@expro;;"nth;	0;
@	;[o;	;"padding;"padding;
@	;i{o;;
@	;@;i;[ ;i{;"2;i{;{ ;"pad-to;
@	;i{:@children[ :@guarded0o;;o;;	"relative-width;0;
@
;[o;	;"pad_from;	"pad-from;
@
;i{o;	;"context;	"context;
@
;i{;i{;{ ;	"pad-from;
@
;i{;[ ;0o;;o;;	"relative-width;0;
@
;[o;	;"pad_to;	"pad-to;
@
;i|o;	;"context;	"context;
@
;i|;i|;{ ;	"pad-to;
@
;i|;[ ;0o:Sass::Tree::PropNode;	["padding-o;	;"	from;	"	from;
@
;i~;
@
:@prop_syntax:new;o;	;"pad_from;	"pad-from;
@
;i~;i~:
@tabsi ;[ o;;	["padding-o;	;"to;	"to;
@
;i;
@
;; ;o;	;"pad_to;	"pad-to;
@
;i;i;!i ;[ o;0;["
width;@;1;2;o;6
;7o;.;"columns;0;@;[o;,	;-"	cols;"	cols;@;	io;,	;-"context;"context;@;	i;	i;*{ ;@;	i;<:
minus;>o;.;"if;0;@;[o;,	;-"border_box_sizing;"border-box-sizing;@;	io;8;@;9@D;i ;:[ ;	i;;"0o;6
;7o;,	;-"pad_to;"pad-to;@;	i;@;	i;<:	plus;>o;,	;-"pad_from;"pad-from;@;	i;	i;*{ ;	i;&i ;
[ u;/	[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"pos:
@name"pos:@options{ :
@linei;
@
;i:@operator:eq:@operand2o:Sass::Script::String	;
@
:@value"
omega:
@type:string;iu:Sass::Tree::IfNode[00[o:Sass::Tree::PropNode:
@name["
float:@options{ :@prop_syntax:new:@valueo:Sass::Script::Variable	:@underscored_name"	from;"	from;@
:
@linei;i:
@tabsi :@children[ o; ;["margin-o;	;"to;"to;@
;i;@
;;	;
o:Sass::Script::Funcall;"gutter:@splat0;@
:
@args[o;	;"context;"context;@
;i;i:@keywords{ ;i;i ;[ u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:
@name"legacy-support-for-ie6:@options{ :
@linei0[o:Sass::Tree::PropNode;["display;@	:@prop_syntax:new:@valueo:Sass::Script::String;@	;"inline:
@type:identifier;	i:
@tabsi :@children[ [o:Sass::Tree::MixinNode;	"
omega:@splat0;
@
:
@args[o;	;"	from;	"	from;
@
;i;i:@keywords{ :@children[ o;
;@;["Ø/* Apply to elements spanning the last column, to account for the page edge.
 * Only needed as an override. Normally 'omega' can just be called by `columns`.
 *
 * $from    : The start-direction for your document. */;;;	i;
[ o;;"
omega;0;@;T;[[o;,;-"	from;"	from;@o;,	;-"from_direction;"from-direction;@;	i;	i;
[
o;;o;.;"opposite-position;0;@;[o;,	;-"	from;"	from;@;	i;	i;*{ ;"to;@;	i;
[ ;0o;;o;.;"opposite-position;0;@;[o;,	;-"omega_float;"omega-float;@;	i;	i;*{ ;"	hack;@;	i;
[ ;0o;0;["
float;@;1;2;o;,	;-"omega_float;"omega-float;@;	i;	i;&i ;
[ o;0;["margin-o;,	;-"to;"to;@;	i;@;1;2;o;(;@;"0;;);	i;&i ;
[ u;/"[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:
@name"legacy-support-for-ie6:@options{ :
@linei;
@
;i:@operator:or:@operand2o;	;"legacy_support_for_ie7;	"legacy-support-for-ie7;
@
;i0[o:Sass::Tree::PropNode;	["#margin-o;	;"	hack;	"	hack;
@
;i;
@
:@prop_syntax:new:@valueo:!Sass::Script::UnaryOperation	;
@
:@operando;	;"gutter_width;	"gutter-width;
@
;i;i;:
minus;i:
@tabsi :@children[ u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:
@name"legacy-support-for-ie6:@options{ :
@linei0[o:Sass::Tree::PropNode;["display;@	:@prop_syntax:new:@valueo:Sass::Script::String;@	;"inline:
@type:identifier;	i:
@tabsi :@children[ o;
;@;["ë/* Shortcut to apply omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $from      : The start-direction for your document. */;;;	i¢;
[ o;;"nth-omega;0;@;T;[[o;,;-"n;"n;@o;(	;@;"	last;;);	i¨[o;,;-"selector;"selector;@o;(	;@;"
child;;);	i©[o;,;-"	from;"	from;@o;,	;-"from_direction;"from-direction;@;	iª;	i«;
[o;;o;.;"if;0;@;[o;6
;7o;,	;-"n;"n;@;	i¬;@;	i¬;<:eq;>o;(	;@;"
first;:string;	i¬o;;@;T;	i¬o;;@;F;	i¬;	i¬;*{ ;"ie;@;	i¬;
[ ;0o;';"adjust-support-for;0;@;T;[ ;	i­;*{"ie7o;,	;-"ie;"ie;@;	i­"ie8o;,	;-"ie;"ie;@;	i­"ie6o;,	;-"ie;"ie;@;	i­;
[o;;@;T;	i®;&i ;
[o;';"
omega;0;@;[o;,	;-"	from;"	from;@;	i®;	i®;*{ ;
[ ;+["&:o;.;"format-nth;0;@;[o;,	;-"n;"n;@;	i®o;,	;-"selector;"selector;@;	i®;	i®;*{ o;
;@;["`/* ---------------------------------------------------------------------------
 * Resets */;;;	i²;
[ o;
;@;["/* Reset a '+columns' grid element to default block behavior
 *
 * $from  : The start direction of your layout (e.g. 'left' for ltr languages) */;;;	iµ;
[ o;;"reset-columns;0;@;T;[[o;,;-"	from;"	from;@o;,	;-"from_direction;"from-direction;@;	i¹;	iº;
[o;;o;.;"opposite-position;0;@;[o;,	;-"	from;"	from;@;	i»;	i»;*{ ;"to;@;	i»;
[ ;0o;;o;.;"opposite-position;0;@;[o;,	;-"omega_float;"omega-float;@;	i¼;	i¼;*{ ;"	hack;@;	i¼;
[ ;0o;0;["
float;@;1;2;o;(;@;"	none;;);	i¾;&i ;
[ o;0;["
width;@;1;2;o;(;@;"	auto;;);	i¿;&i ;
[ o;0;["margin-o;,	;-"to;"to;@;	iÀ;@;1;2;o;(;@;"	auto;;);	iÀ;&i ;
[ u;/ï[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:
@name"legacy-support-for-ie6:@options{ :
@lineiÂ;
@
;iÂ:@operator:or:@operand2o;	;"legacy_support_for_ie7;	"legacy-support-for-ie7;
@
;iÂ0[o:Sass::Tree::PropNode;	["#margin-o;	;"	hack;	"	hack;
@
;iÃ;
@
:@prop_syntax:new:@valueo:Sass::Script::String;
@
;"	auto:
@type:identifier;iÃ:
@tabsi :@children[ u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:
@name"legacy-support-for-ie6:@options{ :
@lineiÄ0[o:Sass::Tree::PropNode;["display;@	:@prop_syntax:new:@valueo:Sass::Script::String;@	;"
block:
@type:identifier;	iÄ:
@tabsi :@children[ o;
;@;["í/* Apply to elements previously set as omega.
 * This will return floats and margins back to non-omega settigns.
 *
 * $context : [optional] The context (columns spanned by parent).
 * $from    : The start-direction for your document. */;;;	iÈ;
[ o;;"remove-omega;0;@;T;[[o;,;-"context;"context;@o;,	;-"total_columns;"total-columns;@;	iÎ[o;,;-"	from;"	from;@o;,	;-"from_direction;"from-direction;@;	iÏ;	iÐ;
[
o;;o;.;"opposite-position;0;@;[o;,	;-"	from;"	from;@;	iÑ;	iÑ;*{ ;"to;@;	iÑ;
[ ;0o;;o;.;"opposite-position;0;@;[o;,	;-"omega_float;"omega-float;@;	iÒ;	iÒ;*{ ;"	hack;@;	iÒ;
[ ;0o;0;["
float;@;1;2;o;,	;-"	from;"	from;@;	iÔ;	iÔ;&i ;
[ o;0;["margin-o;,	;-"to;"to;@;	iÕ;@;1;2;o;.;"gutter;0;@;[o;,	;-"context;"context;@;	iÕ;	iÕ;*{ ;	iÕ;&i ;
[ u;/¿[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:
@name"legacy-support-for-ie6:@options{ :
@linei×;
@
;i×:@operator:or:@operand2o;	;"legacy_support_for_ie7;	"legacy-support-for-ie7;
@
;i×0[o:Sass::Tree::PropNode;	["#margin-o;	;"	hack;	"	hack;
@
;iØ;
@
:@prop_syntax:new:@valueo:Sass::Script::String;
@
;"	auto:
@type:identifier;iØ:
@tabsi :@children[ o;
;@;["6/* Shortcut to apply remove-omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $context   : [optional] The context (columns spanned by parent).
 * $from      : The start-direction for your document. */;;;	iÜ;
[ o;;"remove-nth-omega;0;@;T;[	[o;,;-"n;"n;@o;(	;@;"	last;;);	iã[o;,;-"selector;"selector;@o;(	;@;"
child;;);	iä[o;,;-"context;"context;@o;,	;-"total_columns;"total-columns;@;	iå[o;,;-"	from;"	from;@o;,	;-"from_direction;"from-direction;@;	iæ;	iç;
[o;;o;.;"if;0;@;[o;6
;7o;,	;-"n;"n;@;	iè;@;	iè;<;A;>o;(	;@;"
first;;B;	ièo;;@;T;	ièo;;@;F;	iè;	iè;*{ ;"ie;@;	iè;
[ ;0o;';"adjust-support-for;0;@;T;[ ;	ié;*{"ie7o;,	;-"ie;"ie;@;	ié"ie8o;,	;-"ie;"ie;@;	ié"ie6o;,	;-"ie;"ie;@;	ié;
[o;;@;T;	iê;&i ;
[o;';"remove-omega;0;@;[o;,	;-"context;"context;@;	iêo;,	;-"	from;"	from;@;	iê;	iê;*{ ;
[ ;+["&:o;.;"format-nth;0;@;[o;,	;-"n;"n;@;	iêo;,	;-"selector;"selector;@;	iê;	iê;*{ o;
;@;["i/* ---------------------------------------------------------------------------
 * Change Settings */;;;	iî;
[ o;;"with-grid-settings;0;@;T;[	[o;,;-"columns;"columns;@o;,	;-"total_columns;"total-columns;@;	iò[o;,;-"
width;"
width;@o;,	;-"column_width;"column-width;@;	ió[o;,;-"gutter;"gutter;@o;,	;-"gutter_width;"gutter-width;@;	iô[o;,;-"padding;"padding;@o;,	;-"grid_padding;"grid-padding;@;	iõ;	iö;
[o;
;@;["#/* keep the defaults around */;;;	i÷;
[ o;;o;,	;-"total_columns;"total-columns;@;	iø;"default-columns;@;	iø;
[ ;0o;;o;,	;-"column_width;"column-width;@;	iù;"default-width;@;	iù;
[ ;0o;;o;,	;-"gutter_width;"gutter-width;@;	iú;"default-gutter;@;	iú;
[ ;0o;;o;,	;-"grid_padding;"grid-padding;@;	iû;"default-padding;@;	iû;
[ ;0o;
;@;["/* use the new settings */;;;	iý;
[ o;;o;,	;-"columns;"columns;@;	iþ;"total-columns;@;	iþ;
[ ;0o;;o;,	;-"
width;"
width;@;	iÿ;"column-width;@;	iÿ;
[ ;0o;;o;,	;-"gutter;"gutter;@;	i ;"gutter-width;@;	i ;
[ ;0o;;o;,	;-"padding;"padding;@;	i;"grid-padding;@;	i;
[ ;0o;
;@;["/* apply to contents */;;;	i;
[ o:Sass::Tree::ContentNode;@;	i;
[ o;
;@;[""/* re-instate the defaults */;;;	i;
[ o;;o;,	;-"default_columns;"default-columns;@;	i;"total-columns;@;	i;
[ ;0o;;o;,	;-"default_width;"default-width;@;	i;"column-width;@;	i;
[ ;0o;;o;,	;-"default_gutter;"default-gutter;@;	i	;"gutter-width;@;	i	;
[ ;0o;;o;,	;-"default_padding;"default-padding;@;	i
;"grid-padding;@;	i
;
[ ;0